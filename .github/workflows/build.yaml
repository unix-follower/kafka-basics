name: Build and deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
  pull_request:
    types: [ opened, reopened, synchronize ]
    paths-ignore:
      - README.md
  pull_request_target:
    branches:
      - main
    types:
      - closed
    paths-ignore:
      - README.md

env:
  JAVA_VERSION: 17

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Maven package
        run: >-
          ./mvnw clean package
          --batch-mode
          --threads 4
          -Dskip.tests=true

      - name: Cache packaged files
        uses: actions/cache@v3
        with:
          path: .
          key: packaged
          restore-keys: packaged

  unit-test:
    runs-on: ubuntu-latest
    needs: [ package ]
    steps:
      - name: Get maven packages from cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Get packaged files from cache
        uses: actions/cache@v3
        with:
          path: .
          key: packaged

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: ${{ env.JAVA_VERSION }}

      - name: Unit tests
        run: >-
          ./mvnw test
          --batch-mode
          -Dskip.integration.tests=true

  integration-test:
    runs-on: ubuntu-latest
    needs: [ package ]
    steps:
      - name: Get maven packages from cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Get packaged files from cache
        uses: actions/cache@v3
        with:
          path: .
          key: packaged

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: ${{ env.JAVA_VERSION }}

      - name: ITs
        run: >-
          ./mvnw integration-test
          --batch-mode
          -Dskip.unit.tests=true

  verify:
    runs-on: ubuntu-latest
    needs: [ unit-test, integration-test ]
    steps:
      - name: Get maven packages from cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Get packaged files from cache
        uses: actions/cache@v3
        with:
          path: .
          key: packaged

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: ${{ env.JAVA_VERSION }}

      - name: Verify
        run: >-
          ./mvnw verify
          --batch-mode
          -Dskip.tests=true

  deploy-dev:
    runs-on: ubuntu-latest
    needs: [ verify ]
    environment: dev
    steps:
      - name: Deploy to dev
        run: echo Deploying...

  deploy-stage:
    runs-on: ubuntu-latest
    needs: [ verify ]
    environment: stage
    steps:
      - name: Deploy to stage
        run: echo Deploying...

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [ deploy-stage ]
    environment: prod
    steps:
      - name: Deploy to prod
        run: echo Deploying...
